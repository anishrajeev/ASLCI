# 1 "lib/Lexer.mll"
 
  open Parser

# 6 "lib/Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\236\255\237\255\238\255\239\255\240\255\241\255\000\000\
    \243\255\000\000\000\000\246\255\000\000\021\000\000\000\000\000\
    \000\000\000\000\041\000\255\255\002\000\001\000\253\255\252\255\
    \002\000\008\000\251\255\004\000\005\000\250\255\248\255\249\255\
    \004\000\247\255\000\000\001\000\245\255\006\000\021\000\244\255\
    \242\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\000\
    \255\255\019\000\019\000\255\255\019\000\019\000\019\000\019\000\
    \019\000\019\000\001\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\000\000\000\000\
    \255\255\255\255\000\000\255\255\255\255\000\000\000\000\000\000\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\000\000\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\019\000\019\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \019\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\
    \005\000\004\000\000\000\000\000\000\000\007\000\003\000\000\000\
    \011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\008\000\000\000\000\000\000\000\040\000\000\000\
    \000\000\032\000\017\000\035\000\036\000\014\000\023\000\025\000\
    \024\000\016\000\029\000\038\000\027\000\022\000\012\000\020\000\
    \009\000\021\000\037\000\010\000\015\000\034\000\026\000\028\000\
    \033\000\039\000\000\000\000\000\006\000\000\000\000\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\030\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\031\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\255\255\255\255\000\000\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\007\000\255\255\
    \255\255\012\000\000\000\034\000\035\000\000\000\016\000\024\000\
    \015\000\000\000\028\000\037\000\014\000\021\000\000\000\017\000\
    \000\000\020\000\009\000\000\000\000\000\010\000\025\000\027\000\
    \032\000\038\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\013\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\013\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 6 "lib/Lexer.mll"
                    ( token lexbuf )
# 128 "lib/Lexer.ml"

  | 1 ->
# 7 "lib/Lexer.mll"
               ( VAR (Lexing.lexeme lexbuf) )
# 133 "lib/Lexer.ml"

  | 2 ->
# 8 "lib/Lexer.mll"
           ( BOOLTYPE )
# 138 "lib/Lexer.ml"

  | 3 ->
# 9 "lib/Lexer.mll"
         ( IF )
# 143 "lib/Lexer.ml"

  | 4 ->
# 10 "lib/Lexer.mll"
           ( THEN )
# 148 "lib/Lexer.ml"

  | 5 ->
# 11 "lib/Lexer.mll"
           ( ELSE )
# 153 "lib/Lexer.ml"

  | 6 ->
# 12 "lib/Lexer.mll"
         ( TRUE )
# 158 "lib/Lexer.ml"

  | 7 ->
# 13 "lib/Lexer.mll"
         ( FALSE )
# 163 "lib/Lexer.ml"

  | 8 ->
# 14 "lib/Lexer.mll"
          ( NATTYPE )
# 168 "lib/Lexer.ml"

  | 9 ->
# 15 "lib/Lexer.mll"
        ( ZERO )
# 173 "lib/Lexer.ml"

  | 10 ->
# 16 "lib/Lexer.mll"
           ( SUCC )
# 178 "lib/Lexer.ml"

  | 11 ->
# 17 "lib/Lexer.mll"
           ( PRED )
# 183 "lib/Lexer.ml"

  | 12 ->
# 18 "lib/Lexer.mll"
        ( ANNOTATION )
# 188 "lib/Lexer.ml"

  | 13 ->
# 19 "lib/Lexer.mll"
         ( ARROW )
# 193 "lib/Lexer.ml"

  | 14 ->
# 20 "lib/Lexer.mll"
         ( LAMBDA )
# 198 "lib/Lexer.ml"

  | 15 ->
# 21 "lib/Lexer.mll"
        ( LPAREN )
# 203 "lib/Lexer.ml"

  | 16 ->
# 22 "lib/Lexer.mll"
        ( RPAREN )
# 208 "lib/Lexer.ml"

  | 17 ->
# 23 "lib/Lexer.mll"
        ( DOT )
# 213 "lib/Lexer.ml"

  | 18 ->
# 24 "lib/Lexer.mll"
        ( EOF )
# 218 "lib/Lexer.ml"

  | 19 ->
# 25 "lib/Lexer.mll"
      ( raise (Failure ("Invalid Character")) )
# 223 "lib/Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

